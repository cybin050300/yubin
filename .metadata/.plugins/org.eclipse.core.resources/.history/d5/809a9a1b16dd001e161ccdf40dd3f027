package com.naver.news;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

//작업을 위한 메서드들 : 클래스명.메서드()
public class NaverMethodClass {

	// 3-1. 전체 News 데이터 보유 객체 : static, private

	// 3-2. 기본 생성자
	public NaverMethodClass() { // 기본 생성자
	} // 생성자 end

	// 3-3. 전체 News 데이터 보유 객체 생성 메서드

	// 3-4. FileReader와 BufferedReader를 이용하여 txt 파일을 읽어들이는 메서드
	public static void readData(String uri) {
		// 1. 파일 경로 : uri (메소드 내에서 사용 잘 안함 - >"; 넘겨받음)

		// 2. 파일 경로를 이용한 FileReader객체
		FileReader fr = null;

		// 3. BufferedReader객체
		BufferedReader br = null;

		try {
			fr = new FileReader(uri);
			br = new BufferedReader(fr);
			
			String one = br.readLine();
			String[] temp = one.split("\", \"");

			// 하나의 객체로 저장 =>"; NaverNewsClass
			NaverNewsClass news = new NaverNewsClass(temp[1], temp[2]);
//			System.out.println(temp[0]); // 이미지 이름
//			System.out.println(temp[1]); // 링크주소

			// 전체 데이터 저장소에 추가
			NaverDataClass.news.add(news);

		} catch (FileNotFoundException e) {
			System.out.println(e.getMessage());
			e.printStackTrace();
		} catch (IOException e) {
			System.out.println(e.getMessage());
			e.printStackTrace();
		}
		// 4. while(){}
	}

	// 3-5. String을 이용하여 HTML 태그들을 생성하는 메서드
	public static void makeHTML(String uri) {
		String tags = "<!doctype html>";
		tags = tags + "<html>";
		tags = tags + "<head>";
		tags = tags + "<meta charset=\"utf-8\">";
		tags = tags + "<title>텍스트 파일</title>";
		tags = tags + "</head>";
		tags = tags + "<body>";
		tags = tags + "<h1 style=\"color:red\">NEWS</h1>";
		tags = tags + "<a href= https://newsstand.naver.com/032>";
		tags = tags + "<img src=./newsImages/nsd16500796.gif />";
		tags = tags + "</a>";
		tags = tags + "</body>";
		tags = tags + "</html>";

				FileWriter fw = null;
				
				try {
					fw = new FileWriter(uri);
					fw.write(tags);
					fw.close();
					
				System.out.println("HTML 파일 생성 완료!");
					
				} catch (Exception e) {
					System.out.println(e.getMessage());
				}
	}
}
