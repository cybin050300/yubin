package com.cyb.db;

import java.sql.*;

/**
 * 데이터 베이스 접속, 각종 쿼리 실행 dao class( data access object)
 */
public class DataBaseClass {
	public final String DB_DRIVER = "com.mysql.cj.jdbc.Driver";
	public final String DB_URL = "jdbc:mysql://localhost:3306/";
	public final String DB_ADMIN_ID = "root";
	public final String DB_ADMIN_PW = "1234";

	// java.sql.~~~

	public Connection conn = null; // 공유변수를 만들려면 static 붙여주면 됨

	public DataBaseClass() { // 기본 생성자 //private이면 DataBaseClass 생성 자체가 안됨 -> 나중에 private로 싱글톤 패턴으로 바꿀것임

	}

	/** 1. 데이터 베이스 접속 메서드 **/
	public void connMySQL() {
		// 드라이버 로드
		try {
			Class.forName(DB_DRIVER);
			conn = DriverManager.getConnection(DB_URL + "test", DB_ADMIN_ID, DB_ADMIN_PW);
			System.out.println("드라이버 접속 성공!!");
		} catch (ClassNotFoundException e) {
			System.out.println("ClassNotFound ERR" + e.getMessage());
		} catch (SQLException e) {
			System.out.println("DriverManager.getConnection ERR" + e.getMessage());
		}

		// Connection 객체 얻기

	}

	/** 1. 데이터베이스 접속 메서드 **/
	public void connMySQL() {
		/** 1. 데이터베이스 내의 테이블 전체 레코드 조회 **/
//		select * from employee
//		Connection, Statement, Resultset	// new로 Statement 생성 불가 -> Connection사용
	}

	public void selectAll() {
		Statement stmt = null;
		ResultSet rs = null;

		try {
			stmt = conn.createStatement(); // Statement 객체 생성
			rs = stmt.executeQuery("select * from employee"); // 전체 조회후, 결과 값 저장

			while (rs.next()) { // 읽어들일 레코드가 존재하면 true
				System.out.print(rs.getString("empname")); // 조회된 필드 중 emp_name 필드 값만 확인
				System.out.println(rs.getInt("sale")); // 조회된 필드 중 sale 필드 값만 확인

			}

		} catch (SQLException e) {
			System.out.println("SELECT ALL ERR: " + e.getMessage());
		} finally {
			try {
				rs.close();
				stmt.close();
			} catch (SQLException e) {
				System.out.println("SELECT ALL CLOSE ERR: " + e.getMessage());

			}
		}

	}
}
